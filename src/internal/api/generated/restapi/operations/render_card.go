// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// RenderCardHandlerFunc turns a function with the right signature into a render card handler
type RenderCardHandlerFunc func(RenderCardParams) RenderCardResponder

// Handle executing the request and returning a response
func (fn RenderCardHandlerFunc) Handle(params RenderCardParams) RenderCardResponder {
	return fn(params)
}

// RenderCardHandler interface for that can handle valid render card params
type RenderCardHandler interface {
	Handle(RenderCardParams) RenderCardResponder
}

// NewRenderCard creates a new http.Handler for the render card operation
func NewRenderCard(ctx *middleware.Context, handler RenderCardHandler) *RenderCard {
	return &RenderCard{Context: ctx, Handler: handler}
}

/*RenderCard swagger:route POST /render/card renderCard

Render preview and snapshot for card

*/
type RenderCard struct {
	Context *middleware.Context
	Handler RenderCardHandler
}

func (o *RenderCard) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewRenderCardParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
